% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialvg.R
\name{SpatialVG}
\alias{SpatialVG}
\alias{SpatialVGC.default}
\alias{SpatialVG.default}
\alias{SpatialVG.Assay}
\alias{SpatialVG.SpatialX}
\alias{SpatialVG.Seurat}
\alias{SpatialVG.SpatialExperiment}
\title{Spatially Variable Gene Identification}
\usage{
SpatialVGC.default(
  object,
  cell.prop = NULL,
  cell.type = NULL,
  location = NULL,
  lib.size = NULL,
  kernel.mat = NULL,
  kernel.type = "gaussian",
  kernel.param = NULL,
  check.positive = FALSE,
  fit.maxiter = 500,
  fit.tol = 1e-05,
  fit.model = "poisson",
  weights = NULL,
  num.core = 1,
  verbose = FALSE
)

\method{SpatialVG}{default}(
  object,
  svg.method = NULL,
  covariates = NULL,
  location = NULL,
  lib.size = NULL,
  kernel.mat = NULL,
  kernel.type = "gaussian",
  kernel.param = NULL,
  check.positive = FALSE,
  fit.maxiter = 500,
  fit.tol = 1e-05,
  fit.model = "poisson",
  weights = NULL,
  num.core = 1,
  verbose = FALSE,
  ...
)

\method{SpatialVG}{Assay}(
  object,
  slot.use = "counts",
  location = NULL,
  cell.type = NULL,
  features = NULL,
  svg.method = "spark",
  top.features = 2000,
  svg.param = list(covariates = NULL, lib.size = NULL, fit.maxiter = 100, fit.tol =
    1e-05, fit.model = "poisson"),
  kernel.mat = NULL,
  kernel.param = list(band.with = 2, kernel.type = "gaussian", check.positive = FALSE,
    weights = NULL),
  num.core = 1,
  verbose = TRUE,
  ...
)

\method{SpatialVG}{SpatialX}(
  object,
  assay = NULL,
  slot.use = "counts",
  features = NULL,
  svg.method = "spark",
  cell.type = NULL,
  top.features = 2000,
  svg.param = list(covariates = NULL, lib.size = NULL, fit.maxiter = 100, fit.tol =
    1e-05, fit.model = "poisson"),
  kernel.mat = NULL,
  kernel.param = list(band.with = 2, kernel.type = "gaussian", check.positive = FALSE,
    weights = NULL),
  num.core = 1,
  verbose = TRUE,
  ...
)

\method{SpatialVG}{Seurat}(
  object,
  assay = NULL,
  slot.use = "counts",
  features = NULL,
  location = NULL,
  svg.method = "spark",
  top.features = 2000,
  svg.param = list(covariates = NULL, lib.size = NULL, fit.maxiter = 100, fit.tol =
    1e-05, fit.model = "poisson"),
  kernel.mat = NULL,
  kernel.param = list(band.with = 2, kernel.type = "gaussian", check.positive = FALSE,
    weights = NULL),
  num.core = 1,
  verbose = TRUE,
  ...
)

\method{SpatialVG}{SpatialExperiment}(
  object,
  slot.use = "counts",
  features = NULL,
  location = NULL,
  svg.method = "spark",
  top.features = 2000,
  svg.param = list(covariates = NULL, lib.size = NULL, fit.maxiter = 100, fit.tol =
    1e-05, fit.model = "poisson"),
  kernel.mat = NULL,
  kernel.param = list(band.with = 2, kernel.type = "gaussian", check.positive = FALSE,
    weights = NULL),
  num.core = 1,
  verbose = TRUE,
  ...
)

SpatialVG(object, ...)
}
\arguments{
\item{object}{Input data object. Can be a matrix, SpatialX object, Assay object,
Seurat object, or SpatialExperiment object containing gene expression
data and spatial coordinates.}

\item{cell.prop}{Cell type proportion matrix for cell-type specific analysis.}

\item{cell.type}{Specific cell type(s) to test. If NULL, tests all available cell types.}

\item{location}{Spatial coordinates matrix or data.frame with x and y coordinates
for each cell/spot.}

\item{lib.size}{Library size (total counts) for each cell/spot. Used for count-based
models to account for sequencing depth variation.}

\item{kernel.mat}{Precomputed kernel matrices as a list. If provided, skips
kernel computation and uses these matrices directly.}

\item{kernel.type}{Type of kernel function(s) to use. Can be "gaussian", "cosine",
"linear", "matern", "spline", or a mixture of these.}

\item{kernel.param}{List of additional parameters for kernel computation.}

\item{check.positive}{Whether to check and ensure kernel matrices are positive
definite. Recommended for numerical stability.}

\item{fit.maxiter}{Maximum number of iterations for model fitting.}

\item{fit.tol}{Tolerance threshold for model convergence.}

\item{fit.model}{Statistical model to use for testing:
\itemize{
  \item "poisson": Count-based model for raw counts
  \item "binomial": Binary model for binarized expression
  \item "gaussian": Gaussian model for normalized data
  \item "nonparametric": Non-parametric model (SPARK-X)
}}

\item{weights}{Weights for combining p-values from multiple kernels. If NULL,
uses equal weights.}

\item{num.core}{Number of CPU cores to use for parallel computation.}

\item{verbose}{Whether to print progress messages and debugging information.}

\item{svg.method}{Method for SVG identification. Options include:
\itemize{
  \item "spark": Poisson model with mixture kernels (Nature Methods, 2020)
  \item "sparkx": Non-parametric model with mixture kernels
  \item "sparkg": Gaussian model with mixture kernels
  \item "csvg": Cell-type specific spatially variable genes
  \item "dsvg": Domain-specific spatially variable genes
  \item "isvg": Integrative spatially variable genes
}}

\item{covariates}{Covariates to adjust for (e.g., batch effects, confounding factors).
Currently limited support due to computational intensity.}

\item{...}{Additional arguments passed to methods.}

\item{slot.use}{Data slot to use for analysis. For count models use "counts",
for normalized models use "data" or "scale.data".}

\item{features}{Specific genes/features to test. If NULL, tests all available features.}

\item{top.features}{Number of top SVGs to return and store.}

\item{svg.param}{List of additional parameters for SVG analysis.}

\item{assay}{Name of assay to use (for SpatialX and Seurat objects).}
}
\value{
For \code{SpatialVG.default}: Returns a data.frame with combined p-values,
test statistics, and adjusted p-values for each gene, ordered by significance.

For \code{SpatialVGC.default}: Returns a list of data.frames, one for each
cell type, containing SVG analysis results.

For object methods (\code{SpatialVG.SpatialX}, \code{SpatialVG.Assay}, etc.):
Returns the input object with SVG results stored in the appropriate slots.
}
\description{
These functions perform spatially variable gene (SVG) identification using
various statistical models and kernel methods. They support multiple data
types including raw counts, normalized data, and binary expression patterns,
and can handle different spatial correlation structures through flexible
kernel specifications.
}
\details{
These functions implement sophisticated statistical methods for identifying
genes that exhibit spatially correlated expression patterns. Key features:

\itemize{
  \item \strong{Multiple Statistical Models}: Supports count-based (Poisson),
        binary (binomial), normalized (Gaussian), and non-parametric models
        to handle different data types and distributions.
  \item \strong{Flexible Kernel Methods}: Uses multiple spatial kernels to
        capture different spatial correlation patterns at various scales.
  \item \strong{Cell-Type Specific Analysis}: Can identify SVGs specific to
        particular cell types using cell type proportion information.
  \item \strong{Efficient Computation}: Implements parallel processing and
        optimized algorithms for handling large spatial datasets.
  \item \strong{Comprehensive Multiple Testing}: Combines p-values from
        multiple kernels using the ACAT method to provide robust results.
}

The method works by:
\enumerate{
  \item Fitting a null model that accounts for technical variation and
        covariates (if provided)
  \item Computing spatial kernels that capture different spatial scales
        and patterns
  \item Performing variance component tests for each gene and kernel
  \item Combining evidence across kernels using weighted p-value combination
  \item Adjusting for multiple testing across genes
}
}
\section{Model Selection}{

Choose the appropriate model based on your data:
\itemize{
  \item \strong{Raw UMI counts}: Use "poisson" model
  \item \strong{Binarized expression}: Use "binomial" model
  \item \strong{Normalized/log-transformed data}: Use "gaussian" model
  \item \strong{Large datasets with complex spatial patterns}: Use "nonparametric"
}
}

\section{Kernel Selection}{

Different kernels capture different spatial patterns:
\itemize{
  \item \strong{Gaussian}: Captures smooth, continuous spatial patterns
  \item \strong{Cosine}: Captures periodic spatial patterns
  \item \strong{Matern}: Flexible family capturing various smoothness levels
  \item \strong{Spline}: Captures complex non-linear spatial patterns
  \item \strong{Linear}: Captures linear spatial trends
}

Using multiple kernels (mixture) is recommended to capture diverse spatial
patterns at different scales.
}

\examples{
\dontrun{
# Using a count matrix and spatial coordinates
counts <- matrix(rnbinom(10000, mu = 5, size = 2), nrow = 1000, ncol = 10)
locations <- matrix(runif(20), ncol = 2)

# Basic SVG analysis with default parameters
svg_results <- SpatialVG.default(
  object = counts,
  location = locations,
  fit.model = "poisson"
)

# Cell-type specific SVG analysis
cell_props <- matrix(runif(30), ncol = 3)
colnames(cell_props) <- c("Neuron", "Astrocyte", "Microglia")

csvg_results <- SpatialVGC.default(
  object = counts,
  cell.prop = cell_props,
  location = locations,
  cell.type = c("Neuron", "Astrocyte")
)

# Using with SpatialX object
spatialx_obj <- CreateSpatialXObject(
  counts = counts,
  location = locations
)

spatialx_with_svg <- SpatialVG(
  object = spatialx_obj,
  svg.method = "spark",
  top.features = 1000
)

# Access results
svg_genes <- GetAssayData(spatialx_with_svg, slot = "svg")
top_svg <- GetAssayData(spatialx_with_svg, slot = "sv.genes")
}

}
\references{
Sun, S., Zhu, J., & Zhou, X. (2020). Statistical analysis of spatial expression
patterns for spatially resolved transcriptomic studies. Nature Methods, 17(2), 193-200.

Zhu, J., Sun, S., & Zhou, X. (2021). SPARK-X: non-parametric modeling enables
scalable and robust detection of spatial expression patterns for large spatial
transcriptomic studies. Genome Biology, 22(1), 184.
}
\seealso{
\code{\link{CreateSpatialXObject}}, \code{\link{ComputeACAT}},
\code{\link{ComputeSingleKernelMat}}
}
