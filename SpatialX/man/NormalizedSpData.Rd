% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialtf.R
\name{NormalizedSpData.default}
\alias{NormalizedSpData.default}
\alias{NormalizedSpData}
\title{Normalize Spatial Transcriptomics Data}
\usage{
\method{NormalizedSpData}{default}(
  object,
  norm.method = "log",
  scale.factor = 10000,
  margin = 1,
  block.size = NULL,
  pseudo.count = 1,
  verbose = TRUE,
  ...
)

NormalizedSpData(object, ...)
}
\arguments{
\item{object}{A matrix-like object containing raw count data where rows represent
features (genes) and columns represent cells/spots.}

\item{norm.method}{Method for normalization. Available options:
\itemize{
  \item{"log"}{ - Feature counts for each cell are divided by the total counts for 
  that cell and multiplied by the scale.factor. This is then natural-log transformed 
  using log1p.}
  \item{"logsf"}{ - Log normalization with size factors and pseudo count.}
}}

\item{scale.factor}{Sets the scale factor for cell-level normalization (default: 1e4).
For "log" method, this becomes the target count per cell after normalization.}

\item{margin}{If performing CLR normalization, normalize across features (1) or cells (2).}

\item{block.size}{How many cells should be run in each chunk, will try to split evenly 
across threads. If NULL, automatically determined based on number of workers.}

\item{pseudo.count}{Pseudo count to add before log transformation for "logsf" method 
(default: 1).}

\item{verbose}{Logical indicating whether to display progress bar for normalization 
procedure (default: TRUE).}

\item{...}{Additional arguments passed to normalization methods.}
}
\value{
A normalized matrix of the same dimensions as the input object, with 
normalized expression values.
}
\description{
This function performs various normalization methods on spatial transcriptomics data
to account for technical variations and make expression values comparable across
cells/spots.
}
\details{
The function provides two main normalization approaches:
\itemize{
  \item{\strong{log method}:} Performs library size normalization followed by 
  log transformation. Each cell's counts are divided by its total counts and 
  scaled by \code{scale.factor}, then log1p transformed.
  \item{\strong{logsf method}:} Performs log normalization with size factors 
  and pseudo count for stabilization.
}

For parallel processing, the function automatically detects the number of available
workers and splits the data into chunks for efficient computation.
}
\examples{
\dontrun{# Create example spatial data
data <- matrix(rpois(1000, 5), nrow = 100, ncol = 10)
rownames(data) <- paste0("Gene", 1:100)
colnames(data) <- paste0("Spot", 1:10)

# Perform log normalization
normalized_data <- NormalizedSpData(object = data, norm.method = "log")

# Perform log normalization with custom scale factor
normalized_data <- NormalizedSpData(object = data, norm.method = "log", 
                                   scale.factor = 10000)

# Perform logsf normalization with pseudo count
normalized_data <- NormalizedSpData(object = data, norm.method = "logsf", 
                                   pseudo.count = 1)
}
}
\concept{normalization}
\concept{preprocessing}
