% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialvg.R
\name{spark.null}
\alias{spark.null}
\title{Fit null models for spatial pattern detection}
\usage{
spark.null(
  y,
  covariates = NULL,
  lib.size = NULL,
  fit.model = "poisson",
  fit.maxiter = 100,
  fit.tol = 1e-05,
  verbose = FALSE
)
}
\arguments{
\item{y}{Gene expression vector for a single gene. For Poisson models, this
should be raw counts; for binomial models, this should be binary
(0/1) expression indicators.}

\item{covariates}{Optional matrix of covariates to adjust for in the null
model. Can include technical covariates like batch effects
or biological covariates like cell cycle scores.}

\item{lib.size}{Library size (total counts) for each cell. Required for
Poisson models to account for sequencing depth variation.
Default is NULL.}

\item{fit.model}{Statistical model family to use. Options are "poisson" for
count data or "binomial" for binary data. Default is "poisson".}

\item{fit.maxiter}{Maximum number of iterations for model fitting. Default is 100.}

\item{fit.tol}{Tolerance threshold for model convergence. Default is 1e-5.}

\item{verbose}{Logical indicating whether to print progress messages and
fitting information. Default is FALSE.}
}
\value{
Returns a list with the following components:
  \itemize{
    \item Model components from \code{\link{spark.fit}} including:
      \itemize{
        \item \code{theta}: Estimated variance components
        \item \code{coefficients}: Fixed effects coefficients
        \item \code{linear.predictors}: Linear predictors
        \item \code{fitted.values}: Fitted values
        \item \code{Y}: Working response vector
        \item \code{residuals}: Response residuals
        \item \code{Py}: Projected working response
        \item \code{X}: Design matrix
        \item \code{D}: Diagonal weights matrix
        \item \code{converged}: Convergence status
      }
    \item \code{times}: Computation time in seconds
    \item \code{idx}: Indices of non-missing observations
  }
}
\description{
This function fits null models (without spatial random effects) for individual
genes as an initialization step for spatial pattern detection. It prepares
the baseline models that will later be extended with spatial components
in the full spatial analysis pipeline.
}
\details{
This function serves as the initialization step in the spatial analysis
pipeline by fitting null models that don't include spatial random effects.
These null models provide:

\itemize{
  \item Baseline parameter estimates for fixed effects
  \item Initial values for variance components
  \item Working responses and weights for spatial model fitting
  \item Identification of non-missing observations
}

The function handles two main data types:
\describe{
  \item{Poisson models}{For count data with library size offset to account
        for sequencing depth variation. Requires the \code{lib.size} parameter.}
  \item{Binomial models}{For binary data (expressed/not expressed) without
        library size adjustment.}
}

The fitting process:
\enumerate{
  \item Constructs the appropriate formula based on covariates and model family
  \item Fits an initial GLM using \code{\link{glm}}
  \item Refines the fit using \code{\link{spark.fit}} for robust estimation
  \item Records computation time and observation indices
  \item Returns the complete null model object for spatial extension
}
}
\examples{
\dontrun{
# Poisson model example
set.seed(123)
n_cells <- 100

# Generate Poisson count data
y_pois <- rpois(n_cells, lambda = 10)
lib_size <- rpois(n_cells, lambda = 1000)  # Library sizes
covariates <- matrix(rnorm(n_cells * 2), ncol = 2)  # Two covariates

# Fit null model for Poisson data
null_model_pois <- spark.null(
  y = y_pois,
  covariates = covariates,
  lib.size = lib_size,
  fit.model = "poisson",
  verbose = TRUE
)

# Binomial model example
y_bin <- rbinom(n_cells, 1, 0.3)  # Binary expression

# Fit null model for binary data
null_model_bin <- spark.null(
  y = y_bin,
  covariates = covariates,
  fit.model = "binomial",
  verbose = TRUE
)

# Check model components
str(null_model_pois)
str(null_model_bin)

# Access specific components
coefficients <- null_model_pois$coefficients
convergence <- null_model_pois$converged
computation_time <- null_model_pois$times
}

}
\seealso{
\code{\link{spark.fit}}, \code{\link{spark.ai}}, \code{\link{SpatialVG}},
\code{\link{glm}}
}
