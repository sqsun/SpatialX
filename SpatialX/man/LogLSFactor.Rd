% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialtf.R
\name{LogLSFactor}
\alias{LogLSFactor}
\title{Normalize raw count data using library size factors}
\usage{
LogLSFactor(data, scale.factor = 10000, verbose = TRUE)
}
\arguments{
\item{data}{A matrix, data.frame, or sparse matrix containing raw count data
with features (genes) as rows and cells as columns.}

\item{scale.factor}{The scaling factor used for normalization. Counts are
scaled by (library size / scale.factor) before log
transformation. Default is 10000.}

\item{verbose}{Logical indicating whether to print progress messages and
normalization statistics. Default is TRUE.}
}
\value{
Returns a normalized matrix with the same dimensions as the input
        data. The values are log-transformed (log1p) counts normalized by
        library size factors.
}
\description{
This function normalizes raw count data by scaling counts per cell using
library size factors and then applies a log transformation. This is a
standard preprocessing step for single-cell and spatial transcriptomics
data to make counts comparable across cells with different sequencing depths.
}
\details{
This function implements a standard normalization approach for count-based
genomics data:

\deqn{\text{normalized} = \log\left(1 + \frac{\text{counts} \times \text{scale.factor}}{\text{library size}}\right)}

The normalization process:
\enumerate{
  \item Calculate library size (total counts) for each cell
  \item Scale counts by (library size / scale.factor) to account for
        sequencing depth differences
  \item Apply log(1 + x) transformation to stabilize variance and
        make the data more normally distributed
}

Key features:
\itemize{
  \item Handles both dense and sparse matrix inputs efficiently
  \item Preserves the structure and dimensions of the input data
  \item Uses log1p transformation to handle zero counts gracefully
  \item Provides informative messages about the normalization process
}

This normalization method is particularly useful for:
\itemize{
  \item Making gene expression comparable across cells with different
        sequencing depths
  \item Preparing data for dimensionality reduction methods like PCA
  \item Improving the performance of clustering algorithms
  \item Stabilizing variance for downstream statistical tests
}
}
\examples{
\dontrun{# Create example count matrix
mat <- matrix(data = rbinom(n = 25, size = 5, prob = 0.2), nrow = 5)
rownames(mat) <- paste0("Gene_", 1:5)
colnames(mat) <- paste0("Cell_", 1:5)

# View raw counts
print("Raw counts:")
print(mat)

# Normalize with default parameters
mat_norm <- LogLSFactor(data = mat)
print("Normalized counts:")
print(mat_norm)

# Normalize with custom scale factor
mat_norm_custom <- LogLSFactor(data = mat, scale.factor = 1000, verbose = TRUE)

# Using with sparse matrix
library(Matrix)
sparse_mat <- Matrix(mat, sparse = TRUE)
sparse_norm <- LogLSFactor(data = sparse_mat)

# Compare library sizes before and after normalization
lib_sizes_raw <- colSums(mat)
lib_sizes_norm <- colSums(expm1(mat_norm))  # Convert back to count scale
plot(lib_sizes_raw, lib_sizes_norm, 
     xlab = "Raw library size", ylab = "Normalized library size",
     main = "Library Size Comparison")
abline(0, 1, col = "red")
}
}
\seealso{
\code{\link{NormalizeVST}},
\code{\link{log1p}}
}
\concept{pre-processing}
