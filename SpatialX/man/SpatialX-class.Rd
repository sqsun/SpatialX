% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialx.R
\docType{class}
\name{SpatialX-class}
\alias{SpatialX-class}
\alias{SpatialX}
\alias{colMeans,SpatialX-method}
\alias{colSums,SpatialX-method}
\alias{rowMeans,SpatialX-method}
\alias{rowSums,SpatialX-method}
\alias{names,SpatialX-method}
\alias{show,SpatialX-method}
\alias{CreateAssayObjectEach}
\title{SpatialX: A Package for Spatial Transcriptomics Analysis}
\usage{
\S4method{colMeans}{SpatialX}(x, na.rm = FALSE, dims = 1, ..., slot = "counts")

\S4method{colSums}{SpatialX}(x, na.rm = FALSE, dims = 1, ..., slot = "counts")

\S4method{rowMeans}{SpatialX}(x, na.rm = FALSE, dims = 1, ..., slot = "counts")

\S4method{rowSums}{SpatialX}(x, na.rm = FALSE, dims = 1, ..., slot = "counts")

\S4method{names}{SpatialX}(x)

\S4method{show}{SpatialX}(object)

CreateAssayObjectEach(
  counts,
  location,
  meta.data = NULL,
  names.field = 1,
  names.delim = "_",
  min.cells = 0,
  pct.cells = 0.005,
  min.umi = 10,
  num.core = 1,
  min.features = 0,
  row.names = NULL
)
}
\arguments{
\item{x}{A SpatialX object}

\item{na.rm}{Logical, whether to remove NA values during calculation (default: FALSE)}

\item{dims}{Integer, specifying the dimensions for calculation (default: 1)}

\item{...}{Additional arguments passed to the underlying Matrix::rowSums function}

\item{slot}{Character, specifying which data slot to extract data from (default: 'counts')}

\item{object}{A SpatialX object}

\item{counts}{A count matrix, data.frame, or matrix-like object with features as rows
and cells/spots as columns. Can contain raw counts or normalized data.}

\item{location}{Spatial coordinates as a data.frame or matrix with rows corresponding
to cells/spots and columns for spatial coordinates (typically x and y).
Row names should match column names of the counts matrix.}

\item{meta.data}{Optional cell-level metadata as a data.frame with rows corresponding
to cells and columns containing additional information about each cell.}

\item{names.field}{Field index in cell names containing sample information for
initial identity assignment (default: 1).}

\item{names.delim}{Delimiter used in cell names to separate fields (default: '_').}

\item{min.cells}{Include features detected in at least this many cells. Features
with fewer detected cells will be filtered out (default: 0).}

\item{pct.cells}{Minimum percentage of cells in which a feature must be detected
to be included (default: 0.005).}

\item{min.umi}{Minimum UMI counts per cell. Cells with fewer UMIs will be
filtered out (default: 10).}

\item{num.core}{Number of CPU cores to use for parallel processing (default: 1).}

\item{min.features}{Include cells where at least this many features are detected.
Cells with fewer features will be filtered out (default: 0).}

\item{row.names}{Optional vector of feature names to use when \code{counts} is a
\code{data.frame} or \code{data.frame}-derived object without row names.}
}
\value{
Returns a numeric vector containing the mean of each column

Returns a numeric vector containing the sum of each column

Returns a numeric vector containing the mean of each row

Returns a numeric vector containing the sum of each row

Returns a character vector containing the names of all assays

No return value, outputs object information to the console

Returns a \code{\link{SpatialX}} object containing the provided count data,
        spatial coordinates, metadata, and initialized slots for spatial analysis.
}
\description{
The SpatialX class is the central data structure for spatial multi-omics analysis,
serving as a container for multiple assays and their associated metadata, analysis
results, and computational parameters. It enables integrated analysis of diverse
spatial data types including transcriptomics, proteomics, epigenomics, and imaging data.

Displays the structure and content summary of a SpatialX object in a user-friendly format.

This function creates a SpatialX object by combining count data, spatial coordinates,
and optional metadata into a structured object for spatial analysis. It performs
data validation, filtering, and initializes the object with proper slot assignments.
}
\details{
This package provides tools for analyzing spatial transcriptomics data,
including spatial variable gene detection, data normalization, and
spatial pattern analysis.

SpatialX Class


The SpatialX class provides a comprehensive framework for storing, analyzing, and
visualizing spatial molecular data. It supports:
\itemize{
\item Multi-assay integration (RNA, ATAC, protein, spatial, etc.)
\item Species-specific analysis and annotation
\item Comprehensive metadata management
\item Reproducible analysis workflows through command logging
\item Flexible storage of intermediate results and tool outputs
\item Parallel processing capabilities
}

This function serves as a comprehensive constructor for SpatialX objects, providing:
\itemize{
  \item Data validation and integrity checks
  \item Quality control filtering based on multiple criteria
  \item Automatic extraction of sample identities from cell names
  \item Integration of spatial coordinates with count data
  \item Proper initialization of all object slots
}

The function performs the following steps:
\enumerate{
  \item Validates input dimensions and row/column name consistency
  \item Applies quality control filters to remove low-quality cells and features
  \item Extracts initial cell identities from cell names using specified field and delimiter
  \item Creates an Assay object with the filtered count data
  \item Integrates spatial coordinates and metadata
  \item Initializes the SpatialX object with proper slot assignments
}
}
\section{Functions}{
\itemize{
\item \code{CreateAssayObjectEach()}: Create a SpatialX object using counts, location, and metadata

}}
\section{Slots}{

\describe{
\item{\code{assays}}{A list of Assay objects for this project. Each assay represents a
different data modality (e.g., RNA, ATAC, Spatial) with its own
count matrices, normalized data, and assay-specific analyses.}

\item{\code{active.assay}}{Name of the active, or default, assay; settable using
\code{\link{DefaultAssay}}. This determines which assay is
used by default in analysis functions.}

\item{\code{project.name}}{Name of the project for organizational purposes and
result naming.}

\item{\code{res.path}}{Default file path for saving analysis results, figures, and
exported data. Used by various plotting and export functions.}

\item{\code{species}}{Species identifier used for analysis. Common values include
"hsa" (human), "mmu" (mouse), "rno" (rat), etc. Influences
gene annotation, pathway analysis, and species-specific tools.}

\item{\code{misc}}{A list of miscellaneous information not fitting into other slots.
Can store experiment details, analysis parameters, or user-defined
metadata.}

\item{\code{num.core}}{Number of CPU cores to use for parallel processing. Affects
functions that support parallel computation.}

\item{\code{version}}{Version of SpatialX package specification this object was
built under. Important for reproducibility and compatibility
checks.}

\item{\code{commands}}{A list of logged commands run on this \code{SpatialX} object.
Each entry typically contains the function call, parameters,
and timestamp for reproducibility.}

\item{\code{tools}}{A list of miscellaneous data generated by other tools, should be
filled by developers only using. Stores
intermediate results from various analysis pipelines.}
}}

\section{Class Structure}{

The SpatialX object organizes data hierarchically:
\describe{
\item{Assays}{Multiple data modalities, each as an Assay object}
\item{Metadata}{Project-level information and parameters}
\item{Analysis Results}{Stored in both assay-specific and project-level slots}
\item{Reproducibility}{Command history and version tracking}
}
}

\section{Common Operations}{

\itemize{
\item \code{\link{CreateSpatialXObject}}: Create a new SpatialX object
\item \code{\link{DefaultAssay}}: Get/set the active assay
\item \code{\link{subset}}: Subset the object by cells or features
\item \code{\link{Version}}: Check object version
}
}

\section{Multi-assay Integration}{

SpatialX supports seamless integration of multiple assays through:
\itemize{
\item Shared cell barcodes across assays
\item Coordinated subsetting and filtering
\item Cross-assay normalization and batch correction
\item Integrated visualization and analysis
}
}

\examples{
\dontrun{
# Create a new SpatialX object
spatialx_obj <- CreateSpatialXObject(
counts = count_matrix,
location = spatial_coords,
project = "MySpatialStudy",
species = "hsa"
)

# Add a second assay
spatialx_obj <- AddAssay(
object = spatialx_obj,
assay = atac_assay,
assay.name = "ATAC"
)

# Set active assay
DefaultAssay(spatialx_obj) <- "ATAC"

# Check object version
Version(spatialx_obj)
}

\dontrun{
# Assuming sx is a SpatialX object
col_means <- colMeans(sx, slot = "counts")
}

\dontrun{
# Assuming sx is a SpatialX object
col_sums <- colSums(sx, slot = "counts")
}

\dontrun{
# Assuming sx is a SpatialX object
row_means <- rowMeans(sx, slot = "counts")
}

\dontrun{
# Assuming sx is a SpatialX object
row_sums <- rowSums(sx, slot = "counts")
}

\dontrun{
# Assuming sx is a SpatialX object
assay_names <- names(sx)
}

\dontrun{
# Assuming sx is a SpatialX object
show(sx)
# Or simply type the object name
sx
}

\dontrun{
# Create a SpatialX object from basic components
counts <- matrix(rpois(1000, 5), nrow = 100, ncol = 10)
rownames(counts) <- paste0("Gene_", 1:100)
colnames(counts) <- paste0("Sample1_Cell_", 1:10)

locations <- data.frame(x = runif(10), y = runif(10))
rownames(locations) <- colnames(counts)

# Create object with default parameters
spatialx_obj <- CreateAssayObjectEach(
  counts = counts,
  location = locations
)

# Create object with metadata and filtering
cell_metadata <- data.frame(
  batch = rep("batch1", 10),
  condition = sample(c("ctrl", "trt"), 10, replace = TRUE),
  row.names = colnames(counts)
)

spatialx_obj <- CreateAssayObjectEach(
  counts = counts,
  location = locations,
  meta.data = cell_metadata,
  min.cells = 3,
  min.features = 100,
  names.field = 1,
  names.delim = "_"
)
}

}
\seealso{
\code{\link{CreateSpatialXObject}},
\code{\link{DefaultAssay}}

\code{\link{SpatialX-class}}, \code{\link{CreateSpatialXObject}},
\code{\link{CreateAssayObject}}, \code{\link{ExtractField}}
}
