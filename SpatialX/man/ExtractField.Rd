% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilties.R
\name{ExtractField}
\alias{ExtractField}
\title{Extract delimiter information from a string}
\usage{
ExtractField(string, field = 1, delim = "_")
}
\arguments{
\item{string}{Character string to parse. Typically a cell barcode or 
feature identifier with delimited components}

\item{field}{Integer(s) indicating which field(s) to extract. Can be a
single integer or a vector of multiple numbers. Fields are
1-indexed (first field is 1)}

\item{delim}{Delimiter character to use for splitting the string. 
Set to underscore by default}
}
\value{
A character string containing the extracted field(s). If multiple
        fields are specified, they are rejoined using the same delimiter
}
\description{
Parses a string (usually a cell name) and extracts specified fields based
on a given delimiter. This function is particularly useful for processing
cell barcodes or feature names that follow a structured naming convention.
}
\examples{
# Extract single field from cell barcode
cell_name <- "sample1_batchA_AAACCTGAGCTATGCT"
ExtractField(cell_name, field = 1)  # Returns "sample1"
ExtractField(cell_name, field = 3)  # Returns "AAACCTGAGCTATGCT"

# Extract multiple fields and rejoin
ExtractField(cell_name, field = c(1, 3))  # Returns "sample1_AAACCTGAGCTATGCT"

# Use with different delimiters
cell_name2 <- "sample1-batchA-AAACCTGAGCTATGCT"
ExtractField(cell_name2, field = 2, delim = "-")  # Returns "batchA"

# Practical usage in processing cell names
cell_names <- c("patient1_treatment_CTACGTG", "patient1_control_AGTCCTG")
samples <- sapply(cell_names, ExtractField, field = 2, USE.NAMES = FALSE)
print(samples)  # Returns "treatment" "control"

# Extract multiple fields from multiple strings
fields <- lapply(cell_names, ExtractField, field = c(1, 3))
print(unlist(fields))  # Returns "patient1_CTACGTG" "patient1_AGTCCTG"

}
