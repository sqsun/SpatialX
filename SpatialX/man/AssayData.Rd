% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialx.R
\name{SetAssayData}
\alias{SetAssayData}
\alias{AssayData}
\alias{GetAssayData}
\alias{GetAssayData.Assay}
\alias{GetAssayData.SpatialX}
\alias{SetAssayData.Assay}
\alias{SetAssayData.SpatialX}
\alias{GetAssay}
\alias{GetAssay.SpatialX}
\title{Get data from Assay objects}
\usage{
SetAssayData(object, ...)

GetAssayData(object, slot, ...)

\method{GetAssayData}{Assay}(
  object,
  slot = c("data", "scale.data", "counts", "meta.data", "cell.prop", "domain.clust",
    "meta.features", "images", "ident", "de", "sv.genes", "dr", "svg", "csvg", "dsvg",
    "isvg", "res", "de.truth", "location"),
  ...
)

\method{GetAssayData}{SpatialX}(object, slot = "data", assay = NULL, ...)

SetAssayData(object, ...)

\method{SetAssayData}{Assay}(
  object,
  new.data,
  slot = c("data", "scale.data", "counts", "meta.data", "cell.prop", "domain.clust",
    "meta.features", "images", "ident", "dr", "de", "sv.genes", "svg", "csvg", "dsvg",
    "isvg", "de.truth", "location"),
  ...
)

\method{SetAssayData}{SpatialX}(object, slot = "data", new.data, assay = NULL, ...)

GetAssay(object, ...)

\method{GetAssay}{SpatialX}(object, assay = NULL, ...)
}
\arguments{
\item{object}{A SpatialX object}

\item{...}{Additional arguments}

\item{slot}{Specific assay data slot to modify. For Assay objects, can be one of:
\itemize{
  \item \code{counts}: Raw count data
  \item \code{data}: Normalized expression data
  \item \code{scale.data}: Scaled expression data
  \item \code{meta.data}: Cell-level metadata
  \item \code{cell.prop}: Cell type proportion matrix
  \item \code{domain.clust}: Spatial domain assignments
  \item \code{meta.features}: Feature-level metadata
  \item \code{images}: Associated image data
  \item \code{ident}: Cell identity labels
  \item \code{de}: Differential expression results
  \item \code{sv.genes}: Spatially variable genes
  \item \code{dr}: Dimensionality reduction results
  \item \code{svg}: Overall spatially variable genes
  \item \code{csvg}: Cell-type specific variable genes
  \item \code{dsvg}: Domain-specific variable genes
  \item \code{isvg}: Integrative spatially variable genes
  \item \code{de.truth}: Ground truth DE genes (simulations)
  \item \code{location}: Spatial coordinates
}}

\item{assay}{Assay to get (default: default assay)}

\item{new.data}{New data to assign to the specified slot}
}
\value{
\code{SetAssayData}: \code{object} with the assay data set

Returns the data stored in the specified slot. The return type varies
  by slot, including matrices, data.frames, lists, or vectors.

Returns the modified object with updated data in the specified slot

Returns the specified Assay object
}
\description{
These functions extract data from various slots of Assay and SpatialX objects,
providing flexible access to count matrices, normalized data, spatial coordinates,
metadata, and analysis results.

These functions set data in various slots of Assay and SpatialX objects,
allowing modification of count matrices, normalized data, spatial coordinates,
metadata, and analysis results.
}
\details{
The GetAssayData functions provide unified access to the diverse data types
stored in Assay and SpatialX objects. Key features:
\itemize{
  \item Consistent interface for accessing different data modalities
  \item Automatic handling of default assays in SpatialX objects
  \item Validation of slot names and assay existence
  \item Flexible extraction of analysis results and metadata
}

For SpatialX objects, the function first retrieves the specified assay, then
extracts the requested slot from that assay. This allows seamless access to
assay-specific data without manual assay selection.

The SetAssayData functions provide a unified interface for modifying data
stored in Assay and SpatialX objects. Key features:
\itemize{
  \item Consistent interface for modifying different data types
  \item Automatic validation and preprocessing of input data
  \item Feature name sanitization (replacing underscores with dashes)
  \item Support for both Assay and SpatialX objects
  \item Preservation of object integrity during modifications
}

For data matrices (counts, data, scale.data), the function automatically
replaces underscores in feature names with dashes to maintain compatibility
with downstream analysis functions. Spatial coordinates and other non-matrix
data are set without this transformation.
}
\examples{
\dontrun{
# Get data from an Assay object
assay_obj <- pbmc_small[["RNA"]]

# Access different data slots
counts_data <- GetAssayData(assay_obj, slot = "counts")
normalized_data <- GetAssayData(assay_obj, slot = "data")
spatial_coords <- GetAssayData(assay_obj, slot = "location")
cell_metadata <- GetAssayData(assay_obj, slot = "meta.data")

# Get data from a SpatialX object
# Access default assay data
default_data <- GetAssayData(spatialx_obj, slot = "data")

# Access specific assay data
rna_data <- GetAssayData(spatialx_obj, slot = "counts", assay = "RNA")
atac_data <- GetAssayData(spatialx_obj, slot = "counts", assay = "ATAC")

# Access analysis results
de_results <- GetAssayData(spatialx_obj, slot = "de")
svg_results <- GetAssayData(spatialx_obj, slot = "svg")
dimred_results <- GetAssayData(spatialx_obj, slot = "dr")

# Access spatial information
coordinates <- GetAssayData(spatialx_obj, slot = "location")
cell_proportions <- GetAssayData(spatialx_obj, slot = "cell.prop")
spatial_domains <- GetAssayData(spatialx_obj, slot = "domain.clust")
}

\dontrun{
# Set data in an Assay object
assay_obj <- pbmc_small[["RNA"]]

# Set normalized data
new_normalized <- log1p(GetAssayData(assay_obj, slot = "counts"))
assay_obj <- SetAssayData(assay_obj, slot = "data", new.data = new_normalized)

# Set spatial coordinates
new_coords <- data.frame(x = runif(ncol(assay_obj)), y = runif(ncol(assay_obj)))
assay_obj <- SetAssayData(assay_obj, slot = "location", new.data = new_coords)

# Set cell metadata
new_metadata <- data.frame(
  cluster = sample(1:3, ncol(assay_obj), replace = TRUE),
  row.names = colnames(assay_obj)
)
assay_obj <- SetAssayData(assay_obj, slot = "meta.data", new.data = new_metadata)

# Set data in a SpatialX object
# Modify default assay data
spatialx_obj <- SetAssayData(spatialx_obj, slot = "counts", new.data = new_counts)

# Modify specific assay data
spatialx_obj <- SetAssayData(
  spatialx_obj, 
  slot = "data", 
  new.data = atac_normalized, 
  assay = "ATAC"
)

# Set analysis results
de_results <- FindMarkers(spatialx_obj, ident.1 = "cluster1", ident.2 = "cluster2")
spatialx_obj <- SetAssayData(spatialx_obj, slot = "de", new.data = de_results)

# Set spatial analysis results
spatialx_obj <- SetAssayData(
  spatialx_obj, 
  slot = "cell.prop", 
  new.data = deconvolution_results
)
}

\dontrun{
data("pbmc_small")
GetAssay(object = pbmc_small, assay = "RNA")
}

}
\seealso{
\code{\link{Assay-class}}, \code{\link{SpatialX-class}}, \code{\link{DefaultAssay}}

\code{\link{GetAssayData}}, \code{\link{Assay-class}}, \code{\link{SpatialX-class}}
}
\concept{objects}
