% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatialx.R
\name{MergeSpatialXObject.SpatialX}
\alias{MergeSpatialXObject.SpatialX}
\alias{MergeSpatialXObject.Assay}
\alias{MergeSpatialXObject}
\title{Merge a new assay to an existing SpatialX object}
\usage{
\method{MergeSpatialXObject}{SpatialX}(
  object,
  assay.data = NULL,
  assay.name = "SpatialRNA_new",
  ...
)

\method{MergeSpatialXObject}{Assay}(
  object,
  assay.data = NULL,
  assay.name = "SpatialRNA_new",
  ...
)

MergeSpatialXObject(object, ...)
}
\arguments{
\item{object}{An Assay object to which the new assay will be added}

\item{assay.data}{The new assay data to be merged. Should be compatible with
the existing Assay object in terms of dimensions and
feature names}

\item{assay.name}{Character string specifying the name for the new assay.
Default is 'SpatialRNA_new'}

\item{...}{Additional arguments passed to methods}
}
\value{
Returns a SpatialX object with the new assay data integrated into
the existing object structure

Returns an Assay object with the new assay data integrated,
preserving the original data structure and metadata
}
\description{
This function merges a new assay dataset into an existing SpatialX object,
allowing integration of additional molecular measurements while preserving
existing data structure and metadata.

This function merges a new assay dataset into an existing Assay object,
enabling the integration of additional molecular measurements while
maintaining data consistency and structure.
}
\details{
The function validates the compatibility of the new assay data with the
existing SpatialX object before merging. This includes checking spatial
coordinate alignment, feature names, and data integrity. The merged object
maintains all original assays and metadata while adding the new dataset.

This method validates the compatibility of the new assay data with the
existing Assay object, including checking feature names, cell barcodes,
and data dimensions. The function ensures seamless integration of additional
assay data while maintaining data integrity and relationships between
different assay layers.
}
\examples{
\dontrun{
# Load example SpatialX object
data(example_spatialx)

# Create new assay data
new_assay <- matrix(rnorm(1000), nrow = 100)
rownames(new_assay) <- paste0("Gene_", 1:100)
colnames(new_assay) <- colnames(example_spatialx)

# Merge new assay
merged_obj <- MergeSpatialXObject(example_spatialx,
assay.data = new_assay,
assay.name = "CustomAssay")
}

\dontrun{
# Load example Assay object
data(example_assay)

# Create new assay data with compatible dimensions
new_assay_data <- matrix(rnorm(500), nrow = 50)
rownames(new_assay_data) <- paste0("Feature_", 1:50)
colnames(new_assay_data) <- colnames(example_assay)

# Merge new assay into existing Assay object
merged_assay <- MergeSpatialXObject(example_assay,
assay.data = new_assay_data,
assay.name = "NewMeasurement")
}

}
\seealso{
\code{\link{SpatialX-class}}

\code{\link{Assay-class}}, \code{\link{MergeSpatialXObject.SpatialX}}
}
